<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.znn.demo.dao.SysUserDAO">

    <resultMap type="SysUser" id="SysUserResult">
        <id     property="userId"       column="user_id"      />
        <result property="deptId"       column="dept_id"      />
        <result property="userName"     column="user_name"    />
        <result property="nickName"     column="nick_name"    />
        <result property="email"        column="email"        />
        <result property="phonenumber"  column="phonenumber"  />
        <result property="sex"          column="sex"          />
        <result property="avatar"       column="avatar"       />
        <result property="password"     column="password"     />
        <result property="status"       column="status"       />
        <result property="delFlag"      column="del_flag"     />
        <result property="loginIp"      column="login_ip"     />
        <result property="loginDate"    column="login_date"   />
        <result property="createBy"     column="create_by"    />
        <result property="createTime"   column="create_time"  />
        <result property="updateBy"     column="update_by"    />
        <result property="updateTime"   column="update_time"  />
        <result property="remark"       column="remark"       />
        <association property="dept"    column="dept_id" javaType="SysDept" resultMap="deptResult" />
        <collection  property="roles"   javaType="java.util.List"           resultMap="RoleResult" />
    </resultMap>

    <resultMap id="deptResult" type="SysDept">
        <id     property="deptId"    column="dept_id"     />
        <result property="parentId"  column="parent_id"   />
        <result property="deptName"  column="dept_name"   />
        <result property="ancestors" column="ancestors"   />
        <result property="orderNum"  column="order_num"   />
        <result property="leader"    column="leader"      />
        <result property="status"    column="dept_status" />
    </resultMap>

    <resultMap id="RoleResult" type="SysRole">
        <id     property="roleId"       column="role_id"        />
        <result property="roleName"     column="role_name"      />
        <result property="roleKey"      column="role_key"       />
        <result property="roleSort"     column="role_sort"      />
        <result property="dataScope"     column="data_scope"    />
        <result property="status"       column="role_status"    />
    </resultMap>

    <sql id="selectUserVo">
        select u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.avatar, u.phonenumber, u.password, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark,
               d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.status as dept_status,
               r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status
        from sys_user u
                 left join sys_dept d on u.dept_id = d.dept_id
                 left join sys_user_role ur on u.user_id = ur.user_id
                 left join sys_role r on r.role_id = ur.role_id
    </sql>

    <insert id="insertUser">
        insert into `sys_user`(user_name, nick_name, email, `password`)
        values(#{userName}, #{userName}, #{email}, #{password});
    </insert>

    <update id="updateUser" parameterType="SysUser">
        update sys_user
        <set>
            <if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
            <if test="userName != null and userName != ''">user_name = #{userName},</if>
            <if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
            <if test="email != null ">email = #{email},</if>
            <if test="phonenumber != null ">phonenumber = #{phonenumber},</if>
            <if test="sex != null and sex != ''">sex = #{sex},</if>
            <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
            <if test="loginDate != null">login_date = #{loginDate},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            <if test="remark != null">remark = #{remark},</if>
            update_time = sysdate()
        </set>
        where user_id = #{userId}
    </update>

    <update id="updateUserAvatar">
        update sys_user set avatar = #{avatar} where user_name = #{userName}
    </update>

    <select id="selectByUserName" parameterType="String" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.user_name = #{userName};
    </select>

    <resultMap id="SysUserRole" type="com.znn.demo.domain.entity.SysUser">
        <id property="userId" column="user_id"/>
        <collection property="roles" ofType="com.znn.demo.domain.entity.SysRole">
            <id property="roleId" column="role_id"/>
        </collection>
    </resultMap>
    <!-- 多对多映射 -->
    <select id="selectRoleByUserName" resultMap="SysUserRole">
        select ur.*,r.role_name,r.role_key,r.role_sort,r.data_scope,r.menu_check_strictly,r.dept_check_strictly
        from sys_role r
            right join
        (select u.*,ur.role_id from sys_user u
            left join sys_user_role ur on u.user_id = ur.user_id
         where user_name = #{userName} and u.`status` = 0 and u.del_flag = 0 ) ur
        on r.role_id = ur.role_id
        where r.`status` = 0 and r.del_flag = 0;

    </select>
    <select id="selectAll" resultType="com.znn.demo.domain.entity.SysUser">
        select * from sys_user
        where `status` = 0 and del_flag = 0
        limit #{start}, #{pageSize}
    </select>
    <select id="selectTotal" resultType="java.lang.Integer">
        select count(*) from sys_user;
    </select>
    <select id="checkPhoneUnique" resultType="com.znn.demo.domain.entity.SysUser">
        select user_id, phonenumber from sys_user where phonenumber = #{phonenumber} limit 1;
    </select>
    <select id="checkEmailUnique" resultType="com.znn.demo.domain.entity.SysUser">
        select user_id, email from sys_user where email = #{email} limit 1;
    </select>
</mapper>